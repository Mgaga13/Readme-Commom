# Đặt số lượng tiến trình (worker processes) tự động dựa trên số lõi CPU hiện có
worker_processes auto;

# Định nghĩa file lưu log lỗi (error log) với mức cảnh báo là "warn"
error_log /var/log/nginx/error.log warn;

# Tệp lưu thông tin process ID của Nginx
pid /var/run/nginx.pid;

# Khối cấu hình cho các sự kiện kết nối
events {
    # Thiết lập số lượng kết nối tối đa mỗi worker có thể xử lý (mặc định 1024)
    worker_connections 1024;
}

http {
    # Bao gồm cấu hình các kiểu MIME type từ file mime.types
    include /etc/nginx/mime.types;
    
    # Kiểu dữ liệu mặc định nếu không xác định được MIME type sẽ là application/octet-stream
    default_type application/octet-stream;

    # Định nghĩa định dạng log cho truy cập vào server với các thông tin chi tiết như IP, thời gian, request...
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # File để lưu log truy cập (access log) sử dụng định dạng log đã định nghĩa bên trên
    access_log /var/log/nginx/access.log main;

    # Tắt hiển thị thông tin phiên bản của Nginx trong response header (an toàn hơn)
    server_tokens off;

    # Bật nén gzip để giảm dung lượng truyền tải file
    gzip on;
    # Áp dụng gzip cho các kiểu file sau:
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        # Lắng nghe các request trên cổng 3000
        listen 3000;
        
        # Đặt tên server (hostname), sử dụng localhost cho trường hợp phát triển hoặc nội bộ
        server_name localhost;

        # Thiết lập thư mục gốc chứa file tĩnh phục vụ trang web (được copy từ stage build trong Docker)
        root /usr/share/nginx/html;

        # File mặc định khi truy cập vào thư mục root
        index index.html;

        # Khối location cho URL gốc
        location / {
            # Kiểm tra xem file được yêu cầu có tồn tại không, nếu không sẽ chuyển hướng tới index.html
            # Đây là cấu hình cần thiết cho các SPA (Single Page Application) như ReactJS
            try_files $uri $uri/ /index.html;
        }

        # Location cho các file tĩnh: js, css, ảnh (png, jpg, jpeg, gif, ico, svg), font (woff, woff2, ttf, eot)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            # Thiết lập thời gian hết hạn cache 1 năm, giúp trình duyệt lưu cache và tải nhanh hơn
            expires 1y;
            # Thêm header Cache-Control với chỉ thị public và no-transform
            add_header Cache-Control "public, no-transform";
        }

        # Định nghĩa trang lỗi 404 (Not Found) và chỉ định file 404.html để phục vụ khi trang không tồn tại
        error_page 404 /404.html;
        location = /404.html {
            # Chỉ cho phép truy cập nội bộ (internal), không cho phép truy cập trực tiếp từ bên ngoài
            internal;
        }

        # Định nghĩa trang lỗi cho 500, 502, 503 và 504 (lỗi máy chủ) và chỉ định file 50x.html
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            # Chỉ cho phép truy cập nội bộ
            internal;
        }

        # Chặn truy cập tới các file ẩn bắt đầu bằng dấu chấm, ví dụ .htaccess
        location ~ /\.ht {
            deny all;
        }

        # Thêm một số header bảo mật để hạn chế một số loại tấn công:
        # Ngăn iframe từ các domain khác có thể embed trang web của bạn
        add_header X-Frame-Options "SAMEORIGIN";
        # Ngăn trình duyệt đoán kiểu nội dung dựa trên nội dung file (nhằm tránh MIME type sniffing)
        add_header X-Content-Type-Options "nosniff";
        # Kích hoạt cơ chế bảo vệ chống tấn công XSS
        add_header X-XSS-Protection "1; mode=block";
        # Chính sách referrer để giới hạn thông tin được gửi đi khi chuyển hướng
        add_header Referrer-Policy "no-referrer-when-downgrade";
        # Chính sách bảo mật nội dung (Content-Security-Policy) xác định nguồn cho nội dung tài nguyên
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-ancestors 'self';";
    }
}
